generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  email     String?  @unique(map: "email") @db.VarChar(255)
  password  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model messages {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(255)
  sender    String   @db.VarChar(255)
  createdAt DateTime @default(now())
}

model creditcards {
  id             Int      @id @default(autoincrement())
  cardName       String   @db.VarChar(255)
  cardNumber     String   @db.VarChar(255)
  expirationDate String   @db.VarChar(255)
  cvv            String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @defaulrat(now())
}

model brands {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  email       String    @db.VarChar(255)
  description String    @db.VarChar(255)
  image       String    @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  flights     flights[]
}

model flights {
  id            Int            @id @default(autoincrement())
  destFrom      String         @db.VarChar(255)
  destTo        String         @db.VarChar(255)
  dateFrom      String         @db.VarChar(255)
  dateTo        String         @db.VarChar(255)
  departureTime String         @db.VarChar(255)
  arrivalTime   String         @db.VarChar(255)
  price         Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  brandId       Int?
  brands        brands?        @relation(fields: [brandId], references: [id], map: "flights_ibfk_1")
  reservations  reservations[]
  seats         seats[]
  rating        rating[]

  @@index([brandId], map: "brandId")
}

model rating {
  id        Int      @id @default(autoincrement())
  number    Int
  flights   flights? @relation(fields: [flightId], references: [id], map: "seats_ifk_1")
  flightId  Int?
  users     users?   @relation(fields: [usersId], references: [id], map: "rating_ibfk_1")
  usersId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model payments {
  id            Int           @id @default(autoincrement())
  price         Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  users         users?        @relation(fields: [usersId], references: [id], map: "users_ibfk_1")
  usersId       Int?
}

model reservations {
  id                                      Int        @id @default(autoincrement())
  firstName                               String?    @db.VarChar(255)
  lastName                                String?    @db.VarChar(255)
  birthDate                               String?    @db.VarChar(255)
  phone                                   Int?
  Ephone                                  Int?
  email                                   String?    @db.VarChar(255)
  userId                                  Int?
  createdAt                               DateTime   @default(now())
  updatedAt                               DateTime   @default(now())
  FlightId                                Int?
  SeatId                                  Int?
  flights                                 flights?   @relation(fields: [FlightId], references: [id], map: "reservations_ibfk_1")
  seats_reservations_SeatIdToseats        seats?     @relation("reservations_SeatIdToseats", fields: [SeatId], references: [id], map: "reservations_ibfk_2")
  seats_seats_ReservationIdToreservations seats[]    @relation("seats_ReservationIdToreservations")

  @@index([FlightId], map: "FlightId")
  @@index([SeatId], map: "SeatId")
}

model seats {
  id                                             Int            @id @default(autoincrement())
  availble                                       Boolean
  type                                           seats_type
  name                                           String         @db.VarChar(255)
  createdAt                                      DateTime       @default(now())
  updatedAt                                      DateTime       @default(now())
  FlightId                                       Int?
  ReservationId                                  Int?
  reservations_reservations_SeatIdToseats        reservations[] @relation("reservations_SeatIdToseats")
  flights                                        flights?       @relation(fields: [FlightId], references: [id], map: "seats_ibfk_1")
  reservations_seats_ReservationIdToreservations reservations?  @relation("seats_ReservationIdToreservations", fields: [ReservationId], references: [id], map: "seats_ibfk_2")

  @@index([FlightId], map: "FlightId")
  @@index([ReservationId], map: "ReservationId")
}

model user_fligths {
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  UserId    Int
  FlightId  Int

  @@id([UserId, FlightId])
}


model users {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  email     String?  @unique(map: "email") @db.VarChar(255)
  password  String?  @db.VarChar(255)
  status    Boolean?  @default(true)
  phone     Int?     @unique(map: "phone")
  adress    String?  @db.VarChar(255)
  city      String?  @db.VarChar(255)
  state     String?  @db.VarChar(255)
  country   String?  @db.VarChar(255)
  zip       Int?

  rating    rating[]
 

  image     String?    @default("https://media.istockphoto.com/id/1300845620/vector/user-icon-flat-isolated-on-white-background-user-symbol-vector-illustration.jpg?s=612x612&w=0&k=20&c=yBeyba0hUkh14_jgv1OKqIH0CCSWU_4ckRkAoy2p73o=") @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  payments  payments[]

}

enum seats_type {
  Business
  Economic
}
